{
  "openapi": "3.0.1",
  "info": {
    "title": "Expose Data DIV - Registrations Service",
    "version": "3.0.0",
    "description": "This service allows querying current data registered at the DIV. It returns data of the registration-domain including sub-domains license, certificate, titular and vehicle."
  },
  "servers": [
    {
      "url": "https://esb.tst.mobilit.fgov.be",
      "description": "TST environment"
    },
    {
      "url": "https://esb.ta.mobilit.fgov.be",
      "description": "ACC environment"
    },
    {
      "url": "https://esb.mobilit.fgov.be",
      "description": "PRD environment"
    }
  ],
  "paths": {
    "/mobivisData/rest/registrations": {
      "get": {
        "tags": [
          "Operations for consultation of registrations current data"
        ],
        "summary": "Query registration current data. At least one of the principal parameters should be defined.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "A security token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Organisation",
            "in": "header",
            "description": "This header contains the identification of the organisation technically sending the request to SPF Mobility&Transport. It is the official 10-digit company number as known in the official company register.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Target-Organisation",
            "in": "header",
            "description": "This header contains the identification of the organisation for which the information is intended, from which the information is coming or which is business-wise responsible. It is the official 10-digit company number as known in the official company register.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Target-Organisation-Description",
            "in": "header",
            "description": "This header contains the description of the target-organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-Organisation",
            "in": "header",
            "description": "This header contains the identification of the organisation of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-Organisation-Description",
            "in": "header",
            "description": "This header contains the description of the organisation of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Application",
            "in": "header",
            "description": "This is a description of the requesting business application. This description will be agreed and predefined by SPF Mobility&Transports and is based on the business authorisation to the target-organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-Id",
            "in": "header",
            "description": "This header needs to assure to be able to identify the person who is executing the request. This identification needs to be done by the users own organisation, but not necessarily by the SPF Mobility&Transport. This header is kept in the logs and when necessary (for example in case of a legal investigation) the organisation needs to be able to identify the user. In case the request is not initiated by an individual user, then an identifiable name should be entered identifying the automated process or the business unit.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-Reference",
            "in": "header",
            "description": "This header contains a reference assigned by the user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "This header specifies the language in which multi valued properties of the response should be returned.<br>",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "nl",
                "fr",
                "en",
                "de"
              ]
            }
          },
          {
            "name": "plateNr",
            "in": "query",
            "description": "The plate number as a principal parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plateUID",
            "in": "query",
            "description": "The license unique identifier linked to the plate number as a principal parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vin",
            "in": "query",
            "description": "The vehicle identification number as a principal parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unifier",
            "in": "query",
            "description": "The unifier of the vehicle identification number. <br>To be specified always in combination with the VIN.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "certificateId",
            "in": "query",
            "description": "The certificate (CIM) Id as a principal parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nationalNr",
            "in": "query",
            "description": "The national number as a principal parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyNr",
            "in": "query",
            "description": "The company number as a principal parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTime",
            "in": "query",
            "description": "The date for which the data is requested. When not specified, the default will be the current date and time. Always to be specified in combination with a principal query parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "transactionUID",
            "in": "query",
            "description": "The transaction unique identifier as a principal parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Indicates the size of a page in a paginated collection resource.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Indicates the element before the first element of the requested page in a cursor-based paginated collection resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "404": {
            "description": "No data found for the requested parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/mobivisData/rest/registrations/plateNumbers": {
      "get": {
        "tags": [
          "Operations for consultation of registrations current data"
        ],
        "summary": "Query registration current plate numbers. At least one of the principal parameters should be defined.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "A security token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Organisation",
            "in": "header",
            "description": "This header contains the identification of the organisation technically sending the request to SPF Mobility&Transport. It is the official 10-digit company number as known in the official company register.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Target-Organisation",
            "in": "header",
            "description": "This header contains the identification of the organisation for which the information is intended, from which the information is coming or which is business-wise responsible. It is the official 10-digit company number as known in the official company register.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Target-Organisation-Description",
            "in": "header",
            "description": "This header contains the description of the target-organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-Organisation",
            "in": "header",
            "description": "This header contains the identification of the organisation of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-Organisation-Description",
            "in": "header",
            "description": "This header contains the description of the organisation of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Application",
            "in": "header",
            "description": "This is a description of the requesting business application. This description will be agreed and predefined by SPF Mobility&Transports and is based on the business authorisation to the target-organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-Id",
            "in": "header",
            "description": "This header needs to assure to be able to identify the person who is executing the request. This identification needs to be done by the users own organisation, but not necessarily by the SPF Mobility&Transport. This header is kept in the logs and when necessary (for example in case of a legal investigation) the organisation needs to be able to identify the user. In case the request is not initiated by an individual user, then an identifiable name should be entered identifying the automated process or the business unit.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-Reference",
            "in": "header",
            "description": "This header contains a reference assigned by the user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "This header specifies the language in which multi valued properties of the response should be returned.<br>",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "nl",
                "fr",
                "en",
                "de"
              ]
            }
          },
          {
            "name": "vin",
            "in": "query",
            "description": "The vehicle identification number as a principal parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unifier",
            "in": "query",
            "description": "The unifier of the vehicle identification number. <br>To be specified always in combination with the VIN.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nationalNr",
            "in": "query",
            "description": "The national number as a principal parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyNr",
            "in": "query",
            "description": "The company number as a principal parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTime",
            "in": "query",
            "description": "The date for which the data is requested. When not specified, the default will be the current date and time. Always to be specified in combination with a principal query parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Indicates the size of a page in a paginated collection resource.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Indicates the element before the first element of the requested page in a cursor-based paginated collection resource.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "404": {
            "description": "No data found for the requested parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Response": {
        "type": "object",
        "description": "The object containing the result",
        "properties": {
          "self": {
            "type": "string",
            "description": "Link to this request."
          },
          "items": {
            "type": "array",
            "description": "An array of registration objects. The content can be none, one or multiple objects.",
            "items": {
              "$ref": "#/components/schemas/Registration"
            }
          },
          "total": {
            "type": "number",
            "description": "The total amount of elements in the collection resource following the requested parameters."
          },
          "next": {
            "type": "string",
            "description": "Link to the next page."
          }
        }
      },
      "Registration": {
        "type": "object",
        "description": "The registration object.<br>Attributes will be limited to what is necessary in relation to your legal purposes.",
        "properties": {
          "license": {
            "$ref": "#/components/schemas/License"
          },
          "certificates": {
            "type": "array",
            "description": "An array of certificate data. The content can be none, one or multiple entries.",
            "items": {
              "$ref": "#/components/schemas/Certificate"
            }
          },
          "titular": {
            "$ref": "#/components/schemas/Titular"
          },
          "transactions": {
            "type": "array",
            "description": "An array of transaction data. The content can be none, one or multiple entries.",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle"
          }
        }
      },
      "License": {
        "type": "object",
        "description": "The license object.",
        "properties": {
          "plateNr": {
            "type": "string",
            "description": "The plate number; as it appears on the plate, without any edit characters."
          },
          "plateUID": {
            "type": "string",
            "description": "A technical global unique identifier corresponding with the plate number (GUID) [for Febiac]"
          },
          "plateNrFormatted": {
            "type": "string",
            "description": "The plate number format [for Police]"
          },
          "plateType": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "The type code of the plate"
              },
              "description": {
                "type": "string",
                "description": "The description of the plate type"
              }
            }
          },
          "languageCode": {
            "type": "string",
            "description": "The language of the license; fr, nl, de, en"
          },
          "startSituationDate": {
            "type": "string",
            "format": "date-time",
            "description": "The begin date of the license. "
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "description": "The (planned) expiry date (when relevant/known)"
          },
          "lastRegistrationDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the last registration"
          },
          "firstRegistrationDateBelgium": {
            "type": "string",
            "format": "date",
            "description": "Date of the first registration in Belgium. In case of an imported and used vehicle (101), the first_immatriculation_date can differ from the date of the first registration in Belgium.  This attribute will contain the date of the first registration in the DIV-records to indicate that the vehicle in question is an already used vehicle, that is registered after import."
          },
          "reRegistrationFlag": {
            "type": "string",
            "description": "Indication of re-registration"
          },
          "commercialMaxMass": {
            "type": "number",
            "format": "int32",
            "description": "The commercial maximum mass allowed"
          },
          "commercialMaxCapacity": {
            "type": "number",
            "format": "int32",
            "description": "The commercial maximum capacity allowed"
          },
          "status": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "The status of the license (registration)"
              },
              "beginDate": {
                "type": "string",
                "format": "datetime",
                "description": "The begin date of this status "
              },
              "endDate": {
                "type": "string",
                "format": "datetime",
                "description": "The end date of this status (as old status) filled when a new status becomes active"
              },
              "description": {
                "type": "string",
                "description": "The description of the status code of the license"
              }
            }
          },
          "statusLegal": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "The legal status of the license"
              },
              "beginDate": {
                "type": "string",
                "format": "datetime",
                "description": "The begin date of this status "
              },
              "endDate": {
                "type": "string",
                "format": "datetime",
                "description": "The end date of this status (as old status) filled when a new status becomes active"
              },
              "description": {
                "type": "string",
                "description": "The description of the legal status code of the license"
              }
            }
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the creation of this object within the datastorage"
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last modification of data within this object"
          }
        },
        "required": [
          "plateNr",
          "plateUID"
        ]
      },
      "Certificate": {
        "type": "object",
        "description": "The certificate object.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the certificate CIM"
          },
          "type": {
            "type": "string",
            "description": "The type of the certificate - ORI (Original, DUP (Duplicate), CPY (Copy)"
          },
          "beginDate": {
            "type": "string",
            "format": "datetime",
            "description": "The begin date of the certificate"
          },
          "statusLegal": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "The legal status of the certificate"
              },
              "endDate": {
                "type": "string",
                "format": "datetime",
                "description": "The end date of this status (as old status) filled when a new status becomes active"
              },
              "description": {
                "type": "string",
                "description": "The description of the legal status of the certificate"
              }
            }
          },
          "relatedCertificateId": {
            "type": "string",
            "description": "The id of the related certificate"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "Titular": {
        "description": "The titular object.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Indication whether the titular is a natural person (NP) or a moral person/organization (O). "
          },
          "title": {
            "type": "string",
            "description": "The titular title of the plate. Example of values: Prince, Princess, Duke, Duchess, Marquis, Marquise, Earldom, Countess, Viscount, …"
          },
          "person": {
            "type": "object",
            "description": "Person object - only available in case the titular-type is a natural person.",
            "properties": {
              "nationalNr": {
                "type": "string",
                "description": "The national number of the person"
              },
              "lastName": {
                "description": "The last name(s) of the person",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "firstName": {
                "description": "The first name(s) of the person",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "birthYear": {
                "type": "string",
                "description": "The year of birth of the titular"
              }
            }
          },
          "organisation": {
            "type": "object",
            "description": "Organisation object only available in case the titular-type is a moral person (organisation).",
            "properties": {
              "companyNr": {
                "type": "string",
                "description": "The KBO/BCE number of the company. "
              },
              "name": {
                "type": "string",
                "description": "Name of the organisation"
              },
              "isLeaseCompany": {
                "type": "string",
                "description": "Indication Y(es) or N(o) whether the organisation is a lease-company (Renta-flag)"
              },
              "legalFormCode": {
                "type": "string",
                "description": "The legal-form code of the company"
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "lastUpdateSource": {
                "type": "string",
                "description": "The datasource from which the last update of the address occurred (‘RR’, ‘BIS’, ‘KBO’, ‘local’)"
              },
              "lastUpdateDateTime": {
                "type": "string",
                "format": "datetime",
                "description": "The date and time the address has been last updated from the mentioned data source"
              },
              "streetName": {
                "type": "string",
                "description": "Street name of the address"
              },
              "houseNumber": {
                "type": "string",
                "description": "Housenumber of the address"
              },
              "box": {
                "type": "string",
                "description": "POBox number of the address"
              },
              "postalCode": {
                "type": "string",
                "description": "Postalcode of the address"
              },
              "cityName": {
                "type": "string",
                "description": "The city name of the address. Possible multiple in case city names in FR, NL and/or DE available."
              },
              "country": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Country code (ISO2Code)"
                  },
                  "description": {
                    "type": "string",
                    "description": "Country name"
                  }
                }
              }
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "Vehicle": {
        "type": "object",
        "description": "The vehicle object.",
        "properties": {
          "vin": {
            "type": "string",
            "description": "Vehicle Identification Number or Chassis number. The unique number of the vehicle which is stamped in the vehicle by the manufacturer or competent authority."
          },
          "unifier": {
            "type": "string",
            "description": "With the VIN, the unifier creates an unique identification for small VIN."
          },
          "category": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "European category code. This entry is used to give the information about the type approval which is stated on the COC. Despite of the different ApprovalNumber it is needed to identify these approvals in an easy way."
              },
              "description": {
                "type": "string",
                "description": "European category description  "
              }
            }
          },
          "makeName": {
            "type": "string",
            "description": "The make name of vehicle"
          },
          "commercialName": {
            "type": "string",
            "description": "The commercial name of vehicle"
          },
          "makeDivCode": {
            "type": "string",
            "description": "DIV code of the make name. Will become OBSOLETE in a next release."
          },
          "makeTypeDescription": {
            "type": "string",
            "description": "Make type description. Will become OBSOLETE in a next release."
          },
          "firstRegistrationDate": {
            "type": "string",
            "format": "date",
            "description": "The first registration date of the vehicle (the first time a plate was assigned to it). "
          },
          "firstKnownUseDate": {
            "type": "string",
            "format": "date",
            "description": "The first date when the vehicle has been used (not necessary the same date as the first registration date). For example, the scooters were used in Belgium and the registration was only possible in 2015."
          },
          "maxPermLadenMassNational": {
            "type": "number",
            "format": "int32",
            "description": "Intended registration/in service maximum permissible laden mass in national traffic. In Belgium this is the maximum national mass (F2). [former mmaNational]"
          },
          "type": {
            "type": "string",
            "description": "The type of the vehicle as stated on the approval. This entry is NOT used for commercial description."
          },
          "wvta": {
            "type": "string",
            "description": "European homologation type approval number (Whole Vehicle Type-Approval)"
          },
          "pvaBelgium": {
            "type": "string",
            "description": "Belgian national approval number"
          },
          "typeApprovalType": {
            "type": "string",
            "description": "This entry is used to give the information about the type approval which is stated on the COC. Despite of the different ApprovalNumber it is needed to identify these approvals in an easy way."
          },
          "individualApprovalType": {
            "type": "string",
            "description": "Individual approval type (harmonized/non harmonized)"
          },
          "variant": {
            "type": "string",
            "description": "The variant of the vehicle as stated on the approval."
          },
          "version": {
            "type": "string",
            "description": "The version of the vehicle as stated on the approval."
          },
          "dateCOC": {
            "type": "string",
            "format": "date",
            "description": "The date of the COC"
          },
          "status": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Vehicle status "
              },
              "description": {
                "type": "string",
                "description": "Description of the vehicle status"
              }
            }
          },
          "statusLegal": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Vehicle legal status "
              },
              "description": {
                "type": "string",
                "description": "Description of the vehicle legal status"
              }
            }
          },
          "statusAdministrative": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Vehicle administrative status "
              },
              "description": {
                "type": "string",
                "description": "Description of the vehicle administrative status"
              }
            }
          },
          "accidentDate": {
            "type": "string",
            "format": "date",
            "description": "Date of accident"
          },
          "demolished": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Indication of demolishing"
              },
              "date": {
                "type": "string",
                "format": "date",
                "description": "Destruction or demolished date"
              },
              "description": {
                "type": "string",
                "description": "Description of code demolished"
              }
            }
          },
          "sellerCompanyCode": {
            "type": "string",
            "description": "Company code of the seller of the vehicle"
          },
          "customsStickerCode": {
            "type": "string",
            "description": "Entry timestamp of the technical control"
          },
          "counterType": {
            "type": "number",
            "format": "int32",
            "description": "Indicates number of digits on the odometer."
          },
          "distanceType": {
            "type": "string",
            "description": "Kilométrage (km ou miles) distance utilisée dans le véhicule"
          },
          "techControlValidityDate": {
            "type": "string",
            "format": "date",
            "description": "Valid date of the technical control"
          },
          "techControlEntryDatetime": {
            "type": "string",
            "format": "date-time",
            "description": "Entry timestamp of the technical control"
          },
          "importedCertificateCountryCode": {
            "type": "string",
            "description": "Country code (ISO3) of the foreign CIM for the imported vehicle"
          },
          "importedCertificatePlateNumber": {
            "type": "string",
            "description": "Foreign Plate Number in case of vehicle imported"
          },
          "importedCertificateRegistrationDate": {
            "type": "string",
            "format": "date",
            "description": "Registration date of the imported vehicle"
          },
          "codeForBodyWork": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleCodeForBodyWork"
            }
          },
          "kind": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Vehicle kind as used in Belgium only."
              },
              "description": {
                "type": "string",
                "description": "Description fo the vehicle kind code"
              }
            }
          },
          "nationalBuildup": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "National buildup codes used by technical inspections."
              },
              "description": {
                "type": "string",
                "description": "The description of the national buildup code"
              }
            }
          },
          "nationalConfiguration": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "National vehicle configuration code used by technical inspections."
              },
              "description": {
                "type": "string",
                "description": "Description for the national vehicle configuration code"
              }
            }
          },
          "colour": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleColour"
            }
          },
          "offRoad": {
            "type": "string",
            "description": "'G' value if the vehicle is an 'off-road'; no values in other cases."
          },
          "technicPermissibleMaxMass": {
            "type": "number",
            "format": "int32",
            "description": "Maximum permissible mass of the vehicle."
          },
          "massOfTheVehicleInRunningOrder": {
            "type": "number",
            "format": "int32",
            "description": "Mass of the vehicle in running order"
          },
          "referenceMass": {
            "type": "number",
            "description": "The reference mass"
          },
          "actualMassOfTheVehicle": {
            "type": "number",
            "format": "int32",
            "description": "Actual mass of the vehicle"
          },
          "numberOfAxles": {
            "type": "number",
            "format": "int32",
            "description": "Number of axles of the vehicle"
          },
          "wheelBase": {
            "type": "number",
            "format": "int32",
            "description": "This is the total wheelbase. Unit of mesure: mm. In case of motor vehicle or drawbar trailer: first axle to most rear axle. In case of centre-axle-trailer or semi-trailer: the coupling point to most rear axle."
          },
          "maximumSpeed": {
            "type": "number",
            "format": "int32",
            "description": "Maximum vehicle speed. Unit: km/h or miles/h"
          },
          "limiterIndicator": {
            "type": "boolean",
            "description": "Indicates if the vehicle has a limiter installed"
          },
          "handicapIndicator": {
            "type": "boolean",
            "description": "Indicates if vehicle is built for disabled person"
          },
          "tachoIndicator": {
            "type": "boolean",
            "description": "Indicates a tachograph"
          },
          "assistanceWithoutPedallingIndicator": {
            "type": "boolean",
            "description": "Only available when a vehicle is a speed pedelec. This attribute indicates an autonomous propulsion."
          },
          "sizeHeight": {
            "type": "number",
            "format": "int32",
            "description": "The height of the vehicle"
          },
          "sizeLength": {
            "type": "number",
            "format": "int32",
            "description": "The length of the vehicle"
          },
          "sizeWidth": {
            "type": "number",
            "format": "int32",
            "description": "The width of the vehicle"
          },
          "nrOfSeatingPositions": {
            "type": "number",
            "format": "int32",
            "description": "The number of seating positions (including the driver). The seats designated for use only when the vehicle is stationary are not included."
          },
          "numberOfStandingPlaces": {
            "type": "number",
            "format": "int32",
            "description": "Number of standing places"
          },
          "suspension": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "The suspension code"
              },
              "description": {
                "type": "string",
                "description": "The description of the suspension code"
              }
            }
          },
          "exhaustDirectiveRefCode": {
            "type": "string",
            "description": "The directive exhaust emisisons code"
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the creation of this object within the datastorage"
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last modification of data within this object"
          },
          "engine": {
            "type": "array",
            "description": "Array containing vehicle engine(s) specifications",
            "items": {
              "$ref": "#/components/schemas/VehicleEngine"
            }
          }
        },
        "required": [
          "vin"
        ]
      },
      "VehicleCodeForBodyWork": {
        "type": "object",
        "description": "Object containing specific vehicle code for bodywork",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code for bodywork"
          },
          "description": {
            "type": "string",
            "description": "Description of code for bodywork"
          }
        }
      },
      "VehicleColour": {
        "type": "object",
        "description": "Object containing the colours for a vehicle",
        "properties": {
          "code": {
            "type": "string",
            "description": "Colour code"
          },
          "description": {
            "type": "string",
            "description": "Description of code for colour"
          }
        }
      },
      "VehicleEngine": {
        "type": "object",
        "description": "Object containing specific vehicle technical engine specifications",
        "properties": {
          "engineNumber": {
            "type": "string",
            "description": "The engine number is the unique number of the engine as marked on the engine."
          },
          "engineCapacity": {
            "type": "number",
            "format": "float",
            "description": "Engine capacity (cm^3)"
          },
          "electricEngineIndicator": {
            "type": "boolean",
            "description": "Electric Engine "
          },
          "fuel": {
            "type": "array",
            "description": "Array containing vehicle engine fuel(s) specifications",
            "items": {
              "$ref": "#/components/schemas/VehicleFuel"
            }
          }
        }
      },
      "VehicleFuel": {
        "type": "object",
        "description": "Object containing specific vehicle technical engine specifications",
        "properties": {
          "code": {
            "type": "string",
            "description": "The fuel code (carburant)"
          },
          "description": {
            "type": "string",
            "description": "The fuel description (carburant)"
          },
          "maximumNetPower": {
            "type": "number",
            "format": "float",
            "description": "Maximum net power for combustion engine. Not used  for electric engines."
          },
          "euroNormCode": {
            "type": "string",
            "description": "The emission euronorm "
          },
          "exhaustEmissionLevelEuro": {
            "type": "string",
            "description": "Exhaust emission level Euro (called Euronorm)"
          },
          "maximumContinuousRatedPower": {
            "type": "number",
            "format": "float",
            "description": "Maximum continuous rated power/30 minutes power"
          },
          "weightPowerRatio": {
            "type": "number",
            "format": "float",
            "description": "Power mass ratio"
          },
          "electricEnergyConsWeightedComb": {
            "type": "number",
            "format": "float",
            "description": "Electric energy consumption weighted, combined (Wh/km)"
          },
          "electricRangeExternChargeable": {
            "type": "number",
            "format": "int32",
            "description": "Electric range externally chargeable hybrid vehicle (km)"
          },
          "combinedFuelConsumption": {
            "type": "number",
            "format": "float",
            "description": "Combined fuel consumption"
          },
          "combinedCO2": {
            "type": "number",
            "format": "int32",
            "description": "Combined CO2"
          },
          "WLTPCombinedCO2": {
            "type": "number",
            "format": "int32",
            "description": "All power trains,  CO2 emissions of the WLTP combined testing phase"
          },
          "weightedCombinedCO2": {
            "type": "number",
            "format": "int32",
            "description": "Weighted, combined CO2"
          },
          "WLTPWeightedCombinedCO2": {
            "type": "number",
            "format": "int32",
            "description": "All power trains, CO2 emissions weighted combined of the WLTP test result"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "description": "The transaction object.",
        "properties": {
          "UID": {
            "type": "string",
            "description": "The unique identifier of the transaction object"
          },
          "typeCode": {
            "type": "string",
            "description": "The type code of the transaction",
            "enum": [
              "REG",
              "CGR",
              "CGV",
              "COR",
              "TRA",
              "RAD",
              "UNR"
            ]
          },
          "subTypeCode": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "The subtype code of the transaction"
              },
              "description": {
                "type": "string",
                "description": "The description of the subtype of the transaction"
              }
            }
          },
          "dateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the transaction occured"
          },
          "info": {
            "type": "object",
            "description": "Object containing additional transaction data.",
            "properties": {
              "correctionType": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The type of the correction"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the correction code"
                  }
                }
              },
              "plateNumberPriorTitular": {
                "type": "string",
                "description": "Plate number prior titular"
              },
              "previousPlateNrTitular": {
                "type": "string",
                "description": "Previous plate number titular"
              },
              "newVehicle": {
                "type": "boolean",
                "description": "Indication new vehicle"
              },
              "secondHandVehicle": {
                "type": "boolean",
                "description": "Indication 2nd-hand vehicle"
              },
              "importedVehicle": {
                "type": "boolean",
                "description": "Indication imported vehicle"
              },
              "transferAttestCode": {
                "type": "string",
                "description": "The transafer attest code"
              }
            }
          }
        },
        "required": [
          "dateTime",
          "id",
          "code",
          "type"
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "instance": {
            "type": "string",
            "format": "uuid",
            "description": "A UUID that identifies this specific occurence of the problem."
          },
          "title": {
            "type": "string",
            "description": "A short summary of the problem."
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "The HTTP status code as originally returned by the service.",
            "minimum": 400,
            "maximum": 600,
            "exclusiveMaximum": true
          },
          "detail": {
            "type": "string",
            "description": "An more detailed explanation specific to this occurence of the problem."
          }
        }
      }
    }
  }
}